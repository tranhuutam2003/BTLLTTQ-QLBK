@model X.PagedList.IPagedList<TestWeb.Models.Category>
@using X.PagedList.Mvc.Core

@{
    ViewData["Title"] = "Search Categories";
    Layout = "~/Views/Admin/AdminLayout.cshtml";
}

<h2>Search Categories</h2>

<form asp-action="SearchCategories" method="get" class="mb-3">
    <div class="input-group">
        <input type="text" name="query" class="form-control" placeholder="Search categories..." value="@ViewBag.Query">
        <div class="input-group-append">
            <button type="submit" class="btn btn-primary">Search</button>
        </div>
    </div>
</form>

@if (Model.Any())
{
    <table class="table">
        <thead>
            <tr>
                <th>@Html.DisplayNameFor(model => model.First().CategoryName)</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.CategoryName)</td>
                    <td>
                        <a asp-action="EditCategory" asp-route-id="@item.CategoryID">Edit</a> |
                        <form asp-action="DeleteCategory" asp-route-id="@item.CategoryID" method="post" style="display:inline;">
                            <button type="submit" class="btn btn-link text-danger" onclick="return confirm('Are you sure you want to delete this category?');">Delete</button>
                        </form>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <div class="product__pagination">
        @Html.PagedListPager(Model, page => Url.Action("SearchCategories", new { query = ViewBag.Query, page }))
    </div>
}
else
{
    <p>No categories found.</p>
}